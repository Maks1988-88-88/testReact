{"version":3,"sources":["serviceWorker.js","components/Header/index.jsx","components/MovieCard/index.jsx","components/MovieCardCollection/index.jsx","components/AppSidebar/index.jsx","components/WatchlistCard/index.jsx","components/AppBody/index.jsx","components/App/index.jsx","index.js"],"names":["Boolean","window","location","hostname","match","navNames","Header","navName","map","nav","react_default","a","createElement","className","key","v4","href","headerLogo","this","props","React","Component","MovieCard","_this$props","tittle","descr","rating","onClickAddWatchlist","img","release_date","src","alt","onClick","MovieCardCollection","children","AppSidebar","state","InputValues","_searchValues","evt","name","target","_this","Categories__btn","_searchInputValues","value","setState","Object","defineProperty","_searchInputValuesonSubmit","preventDefault","SearchForm","onSubmit","type","onChange","placeholder","WatchlistCard","AppBody","post","watchList","JSON","parse","localStorage","getItem","checkId","SearchCategories__btn","query","fetch","concat","then","response","ok","json","Error","statusText","data","films","results","film","id","slice","overview","title","vote_average","poster_path","catch","err","console","error","SearchForm__input","onAddWatchlist","newWatchList","newId","toConsumableArray","includes","onDeleteWatchlist","filter","currentPost","currentcheckId","_this2","_this3","_this$state","setItem","stringify","length","components_AppSidebar","components_WatchlistCard","components_MovieCardCollection","components_MovieCard","App","components_Header","components_AppBody","root","document","querySelector","ReactDOM","render","components_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.673d1b8c.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nimport v4 from \"uuid/v4\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./style.css\";\r\n\r\nconst navNames = [\"newLogin\", \"newBrowse\", \"newAbout\"];\r\n\r\nclass Header extends React.Component {\r\n  navName = navNames.map(nav => (\r\n    <li className=\"Navigation__item\" key={v4()}>\r\n      <a href=\"http://localhost:3000/\" className=\"Navigation__link\">\r\n        {nav}\r\n      </a>\r\n    </li>\r\n  ));\r\n  render() {\r\n    const { headerLogo } = this.props;\r\n\r\n    return (\r\n      <header className=\"Header\">\r\n        <h1 className=\"Header__logo\">{headerLogo}</h1>\r\n        <ul className=\"Navigation\">{this.navName}</ul>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  headerLogo: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n// import v4 from \"uuid/v4\";\r\nimport \"./style.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass MovieCard extends React.Component {\r\n  render() {\r\n    const {\r\n      tittle,\r\n      descr,\r\n      rating,\r\n      onClickAddWatchlist,\r\n      // onClick,\r\n      img,\r\n      release_date\r\n    } = this.props;\r\n    return (\r\n      <div className=\"MovieCard\">\r\n        <div>\r\n          <span className=\"MovieInfo__rating\">{rating}</span>\r\n          <img src={img} alt=\"img\" className=\"MovieCard__poster\" />\r\n          <h2 className=\"MovieInfo__title\">{tittle}</h2>\r\n          <p className=\"MovieInfo__descr\">{descr} </p>\r\n          <p className=\"MovieInfo__release\">Release date: {release_date}</p>\r\n        </div>\r\n        <button\r\n          className=\"MovieCard__btn \"\r\n          onClick={onClickAddWatchlist}\r\n        >\r\n          +\r\n        </button>\r\n        {/* <button className=\"MovieCard__btn \" onClick={onClick}>\r\n          +\r\n        </button> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nMovieCard.propTypes = {\r\n  tittle: PropTypes.string.isRequired,\r\n  descr: PropTypes.string.isRequired,\r\n  rating: PropTypes.number.isRequired,\r\n  // onClick: PropTypes.func.isRequired,\r\n  img: PropTypes.string.isRequired,\r\n  release_date: PropTypes.string.isRequired\r\n};\r\n\r\nexport default MovieCard;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nclass MovieCardCollection extends React.Component {\r\n  render() {\r\n    const { children } = this.props;\r\n    return <div className=\"MovieList\">{children}</div>;\r\n  }\r\n}\r\n\r\nexport default MovieCardCollection;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./style.css\";\r\n\r\nclass AppSidebar extends React.Component {\r\n  static propTypes = {\r\n    Categories__btn: PropTypes.func.isRequired,\r\n    SearchForm: PropTypes.func.isRequired\r\n  };\r\n  state = {\r\n    InputValues: \"\"\r\n  };\r\n\r\n  _searchValues = evt => {\r\n    let name = evt.target.name;\r\n    this.props.Categories__btn(name);\r\n  };\r\n\r\n  _searchInputValues = evt => {\r\n    let value = evt.target.value;\r\n    const name = evt.target.name;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  _searchInputValuesonSubmit = evt => {\r\n    evt.preventDefault();\r\n    const { InputValues } = this.state;\r\n    this.props.SearchForm(InputValues);\r\n    this.setState({\r\n      InputValues: \"\"\r\n    });\r\n  };\r\n\r\n  render() {\r\n\r\n    const { InputValues } = this.state;\r\n    const { children } = this.props;\r\n\r\n    return (\r\n      <div className=\"App__sidebar\">\r\n        <form\r\n          className=\"SearchForm\"\r\n          onSubmit={this._searchInputValuesonSubmit}\r\n        >\r\n          <input\r\n            type=\"text\"\r\n            className=\"SearchForm__input\"\r\n            name=\"InputValues\"\r\n            value={InputValues}\r\n            onChange={this._searchInputValues}\r\n            placeholder=\"Search for movies by name...\"\r\n          />\r\n          <button className=\"SearchForm__btn\" type=\"submit\">\r\n            search\r\n          </button>\r\n        </form>\r\n        <div className=\"SearchCategories\">\r\n          <button\r\n            className=\"SearchCategories__btn\"\r\n            name=\"popular\"\r\n            onClick={this._searchValues}\r\n          >\r\n            popular\r\n          </button>\r\n          <button\r\n            className=\"SearchCategories__btn\"\r\n            name=\"top_rated\"\r\n            onClick={this._searchValues}\r\n          >\r\n            top rated\r\n          </button>\r\n          <button\r\n            className=\"SearchCategories__btn\"\r\n            name=\"upcoming\"\r\n            onClick={this._searchValues}\r\n          >\r\n            upcoming\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"Watchlist\">\r\n          <h2 className=\"Watchlist__title\">Watchlist</h2>\r\n          {children}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppSidebar;\r\n","import React, { Component } from 'react';\r\nimport \"./style.css\";\r\nimport PropTypes from 'prop-types';\r\n\r\nclass WatchlistCard extends Component {\r\n  render() {\r\n       const {\r\n         rating,\r\n         img,\r\n         tittle,\r\n         release_date,\r\n         onClick\r\n       } = this.props;\r\n         return (\r\n           <div className=\"WatchlistCard\">\r\n             <img className=\"WatchlistCard__img\" src={img} alt=\"img\" />\r\n             <div className=\"WatchlistCard__body\">\r\n               <h3 className=\"WatchlistCard__title\">{tittle}</h3>\r\n               <p className=\"WatchlistCard__release\">\r\n                 Released:{release_date}\r\n               </p>\r\n               <p className=\"WatchlistCard__rating\">Rating:{rating}</p>\r\n               <button className=\"WatchlistCard__btn\" onClick={onClick}>\r\n                 -\r\n               </button>\r\n             </div>\r\n           </div>\r\n         );\r\n  }\r\n}\r\n\r\nWatchlistCard.propTypes = {\r\n  tittle: PropTypes.string.isRequired,\r\n  rating: PropTypes.number.isRequired,\r\n  img: PropTypes.string.isRequired,\r\n  release_date: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired\r\n};\r\n\r\nexport default WatchlistCard;","import React from \"react\";\r\n// import v4 from \"uuid/v4\";\r\n// import posts from \"../../posts\";\r\nimport \"./style.css\";\r\nimport MovieCard from \"../MovieCard\";\r\nimport MovieCardCollection from \"../MovieCardCollection\";\r\nimport AppSidebar from \"../AppSidebar\";\r\nimport WatchlistCard from \"../WatchlistCard\";\r\n\r\nclass AppBody extends React.Component {\r\n  state = {\r\n    post: [],\r\n    watchList: JSON.parse(localStorage.getItem(\"movie-mate-watchlist\")) || [],\r\n    checkId: []\r\n  };\r\n\r\n  SearchCategories__btn = query => {\r\n    fetch(\r\n      `https://api.themoviedb.org/3/movie/${query}?api_key=680d1c453082be4c031bb516ed6208df&page=1&query=1&include_adult=false`\r\n    )\r\n      .then(response => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        }\r\n        throw new Error(\"Error\" + response.statusText);\r\n      })\r\n      .then(data => {\r\n        const films = data.results.map(film => ({\r\n          id: film.id,\r\n          release_date: film.release_date.slice(0, 4),\r\n          descr: film.overview.slice(0, 100) + \"...\",\r\n          tittle: film.title,\r\n          rating: film.vote_average,\r\n          poster_path:\r\n            \"https://image.tmdb.org/t/p/w300_and_h450_bestv2\" + film.poster_path\r\n        }));\r\n        this.setState({\r\n          post: films\r\n        });\r\n      })\r\n      .catch(err => console.error(err));\r\n  };\r\n\r\n  SearchForm__input = query => {\r\n    fetch(\r\n      `https://api.themoviedb.org/3/search/movie?api_key=680d1c453082be4c031bb516ed6208df&page=1&query=${query}&include_adult=false`\r\n    )\r\n      .then(response => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        }\r\n        throw new Error(\"Error\" + response.statusText);\r\n      })\r\n      .then(data => {\r\n        const films = data.results.map(film => ({\r\n          id: film.id,\r\n          release_date: film.release_date.slice(0, 4),\r\n          descr: film.overview.slice(0, 100) + \"...\",\r\n          tittle: film.title,\r\n          rating: film.vote_average,\r\n          poster_path:\r\n            \"https://image.tmdb.org/t/p/w300_and_h450_bestv2\" + film.poster_path\r\n        }));\r\n        this.setState({\r\n          post: films\r\n        });\r\n      })\r\n      .catch(err => console.error(err));\r\n  };\r\n\r\n  componentWillMount() {\r\n    fetch(\r\n      \"https://api.themoviedb.org/3/movie/popular?api_key=680d1c453082be4c031bb516ed6208df&page=1&query=1&include_adult=false\"\r\n    )\r\n      .then(response => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        }\r\n        throw new Error(\"Error\" + response.statusText);\r\n      })\r\n      .then(data => {\r\n        const films = data.results.map(film => ({\r\n          id: film.id,\r\n          release_date: film.release_date.slice(0, 4),\r\n          descr: film.overview.slice(0, 100) + \"...\",\r\n          tittle: film.title,\r\n          rating: film.vote_average,\r\n          poster_path:\r\n            \"https://image.tmdb.org/t/p/w300_and_h450_bestv2\" + film.poster_path\r\n        }));\r\n        // console.log(films.length);\r\n        this.setState({\r\n          post: films\r\n        });\r\n      })\r\n      .catch(err => console.error(err));\r\n  }\r\n\r\n  // componentWillMount(){\r\n  //   fetch(`https://api.themoviedb.org/3/search/movie?api_key=680d1c453082be4c031bb516ed6208df&page=1&query=1&include_adult=false`)\r\n  //     .then(response => {\r\n  //       if (response.ok) {\r\n  //         return response.json();\r\n  //       }\r\n  //       throw new Error(\"Error\" + response.statusText);\r\n  //     })\r\n  //   .then(data => console.log(data))\r\n  //   .catch (err => console.error(err));\r\n  // }\r\n\r\n  onAddWatchlist = (id, rating, poster_path, tittle, release_date) => {\r\n    const newWatchList = {\r\n      id: id,\r\n      rating: rating,\r\n      poster_path: poster_path,\r\n      tittle: tittle,\r\n      release_date: release_date\r\n    };\r\n    const newId = id;\r\n    this.setState({\r\n      checkId: [...this.state.checkId, newId]\r\n    });\r\n    const { checkId } = this.state;\r\n    if (!checkId.includes(id)) {\r\n      this.setState({\r\n        watchList: [...this.state.watchList, newWatchList]\r\n      });\r\n    }\r\n  };\r\n\r\n  onDeleteWatchlist = id => {\r\n    this.setState({\r\n      watchList: this.state.watchList.filter(\r\n        currentPost => currentPost.id !== id\r\n      ),\r\n      checkId: this.state.checkId.filter(\r\n        currentcheckId => currentcheckId !== id\r\n      )\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { post, watchList } = this.state;\r\n    localStorage.setItem(\r\n      \"movie-mate-watchlist\",\r\n      JSON.stringify(this.state.watchList)\r\n    );\r\n    if (post.length > 0) {\r\n      return (\r\n        <div className=\"App__body\">\r\n          <AppSidebar\r\n            Categories__btn={this.SearchCategories__btn}\r\n            SearchForm={this.SearchForm__input}\r\n          >\r\n            {watchList.map(watchList => (\r\n              <WatchlistCard\r\n                img={watchList.poster_path}\r\n                tittle={watchList.tittle}\r\n                rating={watchList.rating}\r\n                key={watchList.id}\r\n                release_date={watchList.release_date}\r\n                onClick={() => {\r\n                  this.onDeleteWatchlist(watchList.id);\r\n                }}\r\n              />\r\n            ))}\r\n          </AppSidebar>\r\n\r\n          <MovieCardCollection>\r\n            {post.map(post => (\r\n              <MovieCard\r\n                img={post.poster_path}\r\n                tittle={post.tittle}\r\n                descr={post.descr}\r\n                rating={post.rating}\r\n                key={post.id}\r\n                release_date={post.release_date}\r\n                onClickAddWatchlist={() => {\r\n                  this.onAddWatchlist(\r\n                    post.id,\r\n                    post.rating,\r\n                    post.poster_path,\r\n                    post.tittle,\r\n                    post.release_date\r\n                  );\r\n                }}\r\n              />\r\n            ))}\r\n          </MovieCardCollection>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"App__body\">\r\n          <AppSidebar\r\n            Categories__btn={this.SearchCategories__btn}\r\n            SearchForm={this.SearchForm__input}\r\n          >\r\n            {watchList.map(watchList => (\r\n              <WatchlistCard\r\n                img={watchList.poster_path}\r\n                tittle={watchList.tittle}\r\n                rating={watchList.rating}\r\n                key={watchList.id}\r\n                release_date={watchList.release_date}\r\n                onClick={() => {\r\n                  this.onDeleteWatchlist(watchList.id);\r\n                }}\r\n              />\r\n            ))}\r\n          </AppSidebar>\r\n          <MovieCardCollection>\r\n            <p className=\"MovieCardCollection__msg\">\r\n              sorry, we did't find anything\r\n            </p>\r\n          </MovieCardCollection>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default AppBody;\r\n","import React from \"react\";\r\nimport v4 from \"uuid/v4\";\r\nimport \"./style.css\";\r\nimport Header from \"../Header/index\";\r\nimport AppBody from \"../AppBody/index\";\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return <div className=\"App\" id={v4()}>\r\n        <Header headerLogo=\"Movie Mate\" />\r\n        <AppBody />\r\n      </div>;\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n import App from './components/App/index'\n \nconst root = document.querySelector('#root');\n\nReactDOM.render( < App / > , root);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}